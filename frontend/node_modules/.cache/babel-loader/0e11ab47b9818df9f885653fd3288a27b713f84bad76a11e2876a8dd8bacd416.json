{"ast":null,"code":"import axios from 'axios';\nimport { getStoredToken, clearTokens } from '../utils/auth';\nconst BASE_URL = 'http://localhost:5000';\nconst api = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  const token = getStoredToken();\n  if (token && config.headers) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    clearTokens();\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","getStoredToken","clearTokens","BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","Authorization","error","Promise","reject","response","_error$response","status","window","location","href"],"sources":["/workspaces/binarybrain/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { getStoredToken, clearTokens } from '../utils/auth';\n\nconst BASE_URL = 'http://localhost:5000';\n\nconst api = axios.create({\n    baseURL: BASE_URL,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\napi.interceptors.request.use(\n    (config) => {\n        const token = getStoredToken();\n        if (token && config.headers) {\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n    },\n    (error) => Promise.reject(error)\n);\n\napi.interceptors.response.use(\n    (response) => response,\n    (error) => {\n        if (error.response?.status === 401) {\n            clearTokens();\n            window.location.href = '/login';\n        }\n        return Promise.reject(error);\n    }\n);\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,EAAEC,WAAW,QAAQ,eAAe;AAE3D,MAAMC,QAAQ,GAAG,uBAAuB;AAExC,MAAMC,GAAG,GAAGJ,KAAK,CAACK,MAAM,CAAC;EACrBC,OAAO,EAAEH,QAAQ;EACjBI,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AAEFH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACvBC,MAAM,IAAK;EACR,MAAMC,KAAK,GAAGX,cAAc,CAAC,CAAC;EAC9B,IAAIW,KAAK,IAAID,MAAM,CAACJ,OAAO,EAAE;IACzBI,MAAM,CAACJ,OAAO,CAACM,aAAa,GAAG,UAAUD,KAAK,EAAE;EACpD;EACA,OAAOD,MAAM;AACjB,CAAC,EACAG,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACnC,CAAC;AAEDV,GAAG,CAACI,YAAY,CAACS,QAAQ,CAACP,GAAG,CACxBO,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACP,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAChCjB,WAAW,CAAC,CAAC;IACbkB,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACnC;EACA,OAAOP,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAeV,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}