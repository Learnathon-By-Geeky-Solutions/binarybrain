{"ast":null,"code":"var _jsxFileName = \"/workspaces/binarybrain/frontend/src/components/auth/Login.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { TextField, Button, Container, Typography, Box, Alert } from '@mui/material';\nimport { login } from '../../store/slices/authSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object({\n  username: Yup.string().required('Username is required'),\n  password: Yup.string().required('Password is required')\n});\nconst Login = () => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    error,\n    loading\n  } = useSelector(state => state.auth);\n  const handleSubmit = async values => {\n    try {\n      await dispatch(login(values)).unwrap();\n      navigate('/dashboard');\n    } catch (err) {\n      // Error is handled by the redux slice\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mt: 2,\n          width: '100%'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          username: '',\n          password: ''\n        },\n        validationSchema: validationSchema,\n        onSubmit: handleSubmit,\n        children: ({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          style: {\n            width: '100%',\n            marginTop: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            label: \"Username\",\n            name: \"username\",\n            value: values.username,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            error: touched.username && !!errors.username,\n            helperText: touched.username && errors.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            margin: \"normal\",\n            label: \"Password\",\n            name: \"password\",\n            type: \"password\",\n            value: values.password,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            error: touched.password && !!errors.password,\n            helperText: touched.password && errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            disabled: loading,\n            sx: {\n              mt: 3,\n              mb: 2\n            },\n            children: loading ? 'Signing in...' : 'Sign In'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"text\",\n            onClick: () => navigate('/register'),\n            children: \"Don't have an account? Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"xcLwExzT8S/QtF4ji2dfPbAtlrU=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useDispatch","useSelector","useNavigate","Formik","Form","Yup","TextField","Button","Container","Typography","Box","Alert","login","jsxDEV","_jsxDEV","validationSchema","object","username","string","required","password","Login","_s","dispatch","navigate","error","loading","state","auth","handleSubmit","values","unwrap","err","component","maxWidth","children","sx","marginTop","display","flexDirection","alignItems","variant","fileName","_jsxFileName","lineNumber","columnNumber","severity","mt","width","initialValues","onSubmit","errors","touched","handleChange","handleBlur","style","fullWidth","margin","label","name","value","onChange","onBlur","helperText","type","color","disabled","mb","onClick","_c","$RefreshReg$"],"sources":["/workspaces/binarybrain/frontend/src/components/auth/Login.tsx"],"sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { TextField, Button, Container, Typography, Box, Alert } from '@mui/material';\nimport { login } from '../../store/slices/authSlice';\nimport { RootState, AppDispatch } from '../../store';\n\nconst validationSchema = Yup.object({\n    username: Yup.string().required('Username is required'),\n    password: Yup.string().required('Password is required'),\n});\n\nconst Login: React.FC = () => {\n    const dispatch = useDispatch<AppDispatch>();\n    const navigate = useNavigate();\n    const { error, loading } = useSelector((state: RootState) => state.auth);\n\n    const handleSubmit = async (values: { username: string; password: string }) => {\n        try {\n            await dispatch(login(values)).unwrap();\n            navigate('/dashboard');\n        } catch (err) {\n            // Error is handled by the redux slice\n        }\n    };\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <Box\n                sx={{\n                    marginTop: 8,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                }}\n            >\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign In\n                </Typography>\n                {error && <Alert severity=\"error\" sx={{ mt: 2, width: '100%' }}>{error}</Alert>}\n                <Formik\n                    initialValues={{ username: '', password: '' }}\n                    validationSchema={validationSchema}\n                    onSubmit={handleSubmit}\n                >\n                    {({ values, errors, touched, handleChange, handleBlur }) => (\n                        <Form style={{ width: '100%', marginTop: '1rem' }}>\n                            <TextField\n                                fullWidth\n                                margin=\"normal\"\n                                label=\"Username\"\n                                name=\"username\"\n                                value={values.username}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                error={touched.username && !!errors.username}\n                                helperText={touched.username && errors.username}\n                            />\n                            <TextField\n                                fullWidth\n                                margin=\"normal\"\n                                label=\"Password\"\n                                name=\"password\"\n                                type=\"password\"\n                                value={values.password}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                error={touched.password && !!errors.password}\n                                helperText={touched.password && errors.password}\n                            />\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                disabled={loading}\n                                sx={{ mt: 3, mb: 2 }}\n                            >\n                                {loading ? 'Signing in...' : 'Sign In'}\n                            </Button>\n                            <Button\n                                fullWidth\n                                variant=\"text\"\n                                onClick={() => navigate('/register')}\n                            >\n                                Don't have an account? Sign Up\n                            </Button>\n                        </Form>\n                    )}\n                </Formik>\n            </Box>\n        </Container>\n    );\n};\n\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}