{"ast":null,"code":"import api from './api';\nimport { storeTokens } from '../utils/auth';\nexport const authService = {\n  login: async credentials => {\n    const response = await api.post('/api/user/login', credentials);\n    storeTokens(response.data.jwt, response.data.refreshToken);\n  },\n  register: async userData => {\n    const response = await api.post('/api/user/register', userData);\n    return response.data;\n  },\n  refreshToken: async refreshToken => {\n    const response = await api.post('/api/user/refresh', {\n      refreshToken\n    });\n    storeTokens(response.data.jwt, response.data.refreshToken);\n  },\n  getCurrentUser: async () => {\n    const response = await api.get('/api/user/profile');\n    return response.data;\n  },\n  getUserById: async id => {\n    const response = await api.get(`/api/user/profile/${id}`);\n    return response.data;\n  },\n  uploadPhoto: async (userId, file) => {\n    const formData = new FormData();\n    formData.append('id', userId.toString());\n    formData.append('file', file);\n    const response = await api.post('/api/user/photo', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  }\n};","map":{"version":3,"names":["api","storeTokens","authService","login","credentials","response","post","data","jwt","refreshToken","register","userData","getCurrentUser","get","getUserById","id","uploadPhoto","userId","file","formData","FormData","append","toString","headers"],"sources":["/workspaces/binarybrain/frontend/src/services/authService.ts"],"sourcesContent":["import api from './api';\nimport { AuthRequest, AuthResponse, UserDto, RefreshTokenRequest, User } from '../interfaces/auth';\nimport { storeTokens } from '../utils/auth';\n\nexport const authService = {\n    login: async (credentials: AuthRequest): Promise<void> => {\n        const response = await api.post<AuthResponse>('/api/user/login', credentials);\n        storeTokens(response.data.jwt, response.data.refreshToken);\n    },\n\n    register: async (userData: UserDto): Promise<User> => {\n        const response = await api.post<User>('/api/user/register', userData);\n        return response.data;\n    },\n\n    refreshToken: async (refreshToken: string): Promise<void> => {\n        const response = await api.post<AuthResponse>('/api/user/refresh', { refreshToken } as RefreshTokenRequest);\n        storeTokens(response.data.jwt, response.data.refreshToken);\n    },\n\n    getCurrentUser: async (): Promise<User> => {\n        const response = await api.get<User>('/api/user/profile');\n        return response.data;\n    },\n\n    getUserById: async (id: number): Promise<User> => {\n        const response = await api.get<User>(`/api/user/profile/${id}`);\n        return response.data;\n    },\n\n    uploadPhoto: async (userId: number, file: File): Promise<string> => {\n        const formData = new FormData();\n        formData.append('id', userId.toString());\n        formData.append('file', file);\n        const response = await api.post<string>('/api/user/photo', formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        });\n        return response.data;\n    },\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,SAASC,WAAW,QAAQ,eAAe;AAE3C,OAAO,MAAMC,WAAW,GAAG;EACvBC,KAAK,EAAE,MAAOC,WAAwB,IAAoB;IACtD,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAe,iBAAiB,EAAEF,WAAW,CAAC;IAC7EH,WAAW,CAACI,QAAQ,CAACE,IAAI,CAACC,GAAG,EAAEH,QAAQ,CAACE,IAAI,CAACE,YAAY,CAAC;EAC9D,CAAC;EAEDC,QAAQ,EAAE,MAAOC,QAAiB,IAAoB;IAClD,MAAMN,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAO,oBAAoB,EAAEK,QAAQ,CAAC;IACrE,OAAON,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDE,YAAY,EAAE,MAAOA,YAAoB,IAAoB;IACzD,MAAMJ,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAe,mBAAmB,EAAE;MAAEG;IAAa,CAAwB,CAAC;IAC3GR,WAAW,CAACI,QAAQ,CAACE,IAAI,CAACC,GAAG,EAAEH,QAAQ,CAACE,IAAI,CAACE,YAAY,CAAC;EAC9D,CAAC;EAEDG,cAAc,EAAE,MAAAA,CAAA,KAA2B;IACvC,MAAMP,QAAQ,GAAG,MAAML,GAAG,CAACa,GAAG,CAAO,mBAAmB,CAAC;IACzD,OAAOR,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDO,WAAW,EAAE,MAAOC,EAAU,IAAoB;IAC9C,MAAMV,QAAQ,GAAG,MAAML,GAAG,CAACa,GAAG,CAAO,qBAAqBE,EAAE,EAAE,CAAC;IAC/D,OAAOV,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDS,WAAW,EAAE,MAAAA,CAAOC,MAAc,EAAEC,IAAU,KAAsB;IAChE,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,IAAI,EAAEJ,MAAM,CAACK,QAAQ,CAAC,CAAC,CAAC;IACxCH,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IAC7B,MAAMb,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAS,iBAAiB,EAAEa,QAAQ,EAAE;MACjEI,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACF,OAAOlB,QAAQ,CAACE,IAAI;EACxB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}