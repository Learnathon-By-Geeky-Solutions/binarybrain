{"ast":null,"code":"var _jsxFileName = \"/workspaces/binarybrain/frontend/src/components/auth/ProtectedRoute.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { CircularProgress, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    isLoading\n  } = useAuth();\n  const location = useLocation();\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  }\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_s(ProtectedRoute, \"J7RTr1FGmaNUDR5R5RXW3Wn2R7A=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useLocation","useAuth","CircularProgress","Box","jsxDEV","_jsxDEV","Fragment","_Fragment","ProtectedRoute","children","_s","isAuthenticated","isLoading","location","sx","display","justifyContent","alignItems","height","fileName","_jsxFileName","lineNumber","columnNumber","to","state","from","replace","_c","$RefreshReg$"],"sources":["/workspaces/binarybrain/frontend/src/components/auth/ProtectedRoute.tsx"],"sourcesContent":["import React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { CircularProgress, Box } from '@mui/material';\n\ninterface ProtectedRouteProps {\n    children: React.ReactNode;\n}\n\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ children }) => {\n    const { isAuthenticated, isLoading } = useAuth();\n    const location = useLocation();\n\n    if (isLoading) {\n        return (\n            <Box\n                sx={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '100vh',\n                }}\n            >\n                <CircularProgress />\n            </Box>\n        );\n    }\n\n    if (!isAuthenticated) {\n        return <Navigate to=\"/login\" state={{ from: location }} replace />;\n    }\n\n    return <>{children}</>;\n};\n\nexport default ProtectedRoute;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,OAAO,QAAQ,4BAA4B;AACpD,SAASC,gBAAgB,EAAEC,GAAG,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAMtD,MAAMC,cAA6C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpE,MAAM;IAAEC,eAAe;IAAEC;EAAU,CAAC,GAAGX,OAAO,CAAC,CAAC;EAChD,MAAMY,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,IAAIY,SAAS,EAAE;IACX,oBACIP,OAAA,CAACF,GAAG;MACAW,EAAE,EAAE;QACAC,OAAO,EAAE,MAAM;QACfC,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE,QAAQ;QACpBC,MAAM,EAAE;MACZ,CAAE;MAAAT,QAAA,eAEFJ,OAAA,CAACH,gBAAgB;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC;EAEd;EAEA,IAAI,CAACX,eAAe,EAAE;IAClB,oBAAON,OAAA,CAACN,QAAQ;MAACwB,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEZ;MAAS,CAAE;MAACa,OAAO;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtE;EAEA,oBAAOjB,OAAA,CAAAE,SAAA;IAAAE,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AAC1B,CAAC;AAACC,EAAA,CAxBIF,cAA6C;EAAA,QACRP,OAAO,EAC7BD,WAAW;AAAA;AAAA2B,EAAA,GAF1BnB,cAA6C;AA0BnD,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}