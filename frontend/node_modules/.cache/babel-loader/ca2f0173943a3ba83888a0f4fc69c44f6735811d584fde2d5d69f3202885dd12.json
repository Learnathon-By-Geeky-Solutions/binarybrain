{"ast":null,"code":"import api from './api';\nexport const classroomService = {\n  getAllClassrooms: async () => {\n    const response = await api.get('/api/v1/private/classrooms');\n    return response.data;\n  },\n  getClassroomById: async id => {\n    const response = await api.get(`/api/v1/private/classrooms/${id}`);\n    return response.data;\n  },\n  getClassroomsByTeacher: async teacherId => {\n    const response = await api.get(`/api/v1/private/classrooms/teacher/${teacherId}`);\n    return response.data;\n  },\n  getClassroomsByStudent: async studentId => {\n    const response = await api.get(`/api/v1/private/classrooms/student/${studentId}`);\n    return response.data;\n  },\n  createClassroom: async classroom => {\n    const response = await api.post('/api/v1/private/classrooms', classroom);\n    return response.data;\n  },\n  updateClassroom: async (id, classroom) => {\n    const response = await api.put(`/api/v1/private/classrooms/${id}`, classroom);\n    return response.data;\n  },\n  deleteClassroom: async id => {\n    await api.delete(`/api/v1/private/classrooms/${id}`);\n  },\n  getStudentsInClassroom: async classroomId => {\n    const response = await api.get(`/api/v1/private/classrooms/${classroomId}/students`);\n    return response.data;\n  },\n  addStudentToClassroom: async (classroomId, studentId) => {\n    await api.post(`/api/v1/private/classrooms/${classroomId}/students/${studentId}`);\n  },\n  removeStudentFromClassroom: async (classroomId, studentId) => {\n    await api.delete(`/api/v1/private/classrooms/${classroomId}/students/${studentId}`);\n  },\n  enrollInClassroom: async request => {\n    await api.post('/api/v1/private/classrooms/enroll', request);\n  },\n  addCourseToClassroom: async (classroomId, courseId) => {\n    await api.post(`/api/v1/private/classrooms/${classroomId}/courses/${courseId}`);\n  },\n  removeCourseFromClassroom: async (classroomId, courseId) => {\n    await api.delete(`/api/v1/private/classrooms/${classroomId}/courses/${courseId}`);\n  }\n};","map":{"version":3,"names":["api","classroomService","getAllClassrooms","response","get","data","getClassroomById","id","getClassroomsByTeacher","teacherId","getClassroomsByStudent","studentId","createClassroom","classroom","post","updateClassroom","put","deleteClassroom","delete","getStudentsInClassroom","classroomId","addStudentToClassroom","removeStudentFromClassroom","enrollInClassroom","request","addCourseToClassroom","courseId","removeCourseFromClassroom"],"sources":["/workspaces/binarybrain/frontend/src/services/classroomService.ts"],"sourcesContent":["import api from './api';\nimport {\n    Classroom,\n    CreateClassroomDto,\n    UpdateClassroomDto,\n    ClassroomStudent,\n    EnrollmentRequest,\n} from '../interfaces/classroom';\n\nexport const classroomService = {\n    getAllClassrooms: async (): Promise<Classroom[]> => {\n        const response = await api.get<Classroom[]>('/api/v1/private/classrooms');\n        return response.data;\n    },\n\n    getClassroomById: async (id: number): Promise<Classroom> => {\n        const response = await api.get<Classroom>(`/api/v1/private/classrooms/${id}`);\n        return response.data;\n    },\n\n    getClassroomsByTeacher: async (teacherId: number): Promise<Classroom[]> => {\n        const response = await api.get<Classroom[]>(`/api/v1/private/classrooms/teacher/${teacherId}`);\n        return response.data;\n    },\n\n    getClassroomsByStudent: async (studentId: number): Promise<Classroom[]> => {\n        const response = await api.get<Classroom[]>(`/api/v1/private/classrooms/student/${studentId}`);\n        return response.data;\n    },\n\n    createClassroom: async (classroom: CreateClassroomDto): Promise<Classroom> => {\n        const response = await api.post<Classroom>('/api/v1/private/classrooms', classroom);\n        return response.data;\n    },\n\n    updateClassroom: async (id: number, classroom: UpdateClassroomDto): Promise<Classroom> => {\n        const response = await api.put<Classroom>(`/api/v1/private/classrooms/${id}`, classroom);\n        return response.data;\n    },\n\n    deleteClassroom: async (id: number): Promise<void> => {\n        await api.delete(`/api/v1/private/classrooms/${id}`);\n    },\n\n    getStudentsInClassroom: async (classroomId: number): Promise<ClassroomStudent[]> => {\n        const response = await api.get<ClassroomStudent[]>(\n            `/api/v1/private/classrooms/${classroomId}/students`\n        );\n        return response.data;\n    },\n\n    addStudentToClassroom: async (classroomId: number, studentId: number): Promise<void> => {\n        await api.post(`/api/v1/private/classrooms/${classroomId}/students/${studentId}`);\n    },\n\n    removeStudentFromClassroom: async (classroomId: number, studentId: number): Promise<void> => {\n        await api.delete(`/api/v1/private/classrooms/${classroomId}/students/${studentId}`);\n    },\n\n    enrollInClassroom: async (request: EnrollmentRequest): Promise<void> => {\n        await api.post('/api/v1/private/classrooms/enroll', request);\n    },\n\n    addCourseToClassroom: async (classroomId: number, courseId: number): Promise<void> => {\n        await api.post(`/api/v1/private/classrooms/${classroomId}/courses/${courseId}`);\n    },\n\n    removeCourseFromClassroom: async (classroomId: number, courseId: number): Promise<void> => {\n        await api.delete(`/api/v1/private/classrooms/${classroomId}/courses/${courseId}`);\n    },\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AASvB,OAAO,MAAMC,gBAAgB,GAAG;EAC5BC,gBAAgB,EAAE,MAAAA,CAAA,KAAkC;IAChD,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAc,4BAA4B,CAAC;IACzE,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDC,gBAAgB,EAAE,MAAOC,EAAU,IAAyB;IACxD,MAAMJ,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAY,8BAA8BG,EAAE,EAAE,CAAC;IAC7E,OAAOJ,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDG,sBAAsB,EAAE,MAAOC,SAAiB,IAA2B;IACvE,MAAMN,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAc,sCAAsCK,SAAS,EAAE,CAAC;IAC9F,OAAON,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDK,sBAAsB,EAAE,MAAOC,SAAiB,IAA2B;IACvE,MAAMR,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAc,sCAAsCO,SAAS,EAAE,CAAC;IAC9F,OAAOR,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDO,eAAe,EAAE,MAAOC,SAA6B,IAAyB;IAC1E,MAAMV,QAAQ,GAAG,MAAMH,GAAG,CAACc,IAAI,CAAY,4BAA4B,EAAED,SAAS,CAAC;IACnF,OAAOV,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDU,eAAe,EAAE,MAAAA,CAAOR,EAAU,EAAEM,SAA6B,KAAyB;IACtF,MAAMV,QAAQ,GAAG,MAAMH,GAAG,CAACgB,GAAG,CAAY,8BAA8BT,EAAE,EAAE,EAAEM,SAAS,CAAC;IACxF,OAAOV,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDY,eAAe,EAAE,MAAOV,EAAU,IAAoB;IAClD,MAAMP,GAAG,CAACkB,MAAM,CAAC,8BAA8BX,EAAE,EAAE,CAAC;EACxD,CAAC;EAEDY,sBAAsB,EAAE,MAAOC,WAAmB,IAAkC;IAChF,MAAMjB,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAC1B,8BAA8BgB,WAAW,WAC7C,CAAC;IACD,OAAOjB,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDgB,qBAAqB,EAAE,MAAAA,CAAOD,WAAmB,EAAET,SAAiB,KAAoB;IACpF,MAAMX,GAAG,CAACc,IAAI,CAAC,8BAA8BM,WAAW,aAAaT,SAAS,EAAE,CAAC;EACrF,CAAC;EAEDW,0BAA0B,EAAE,MAAAA,CAAOF,WAAmB,EAAET,SAAiB,KAAoB;IACzF,MAAMX,GAAG,CAACkB,MAAM,CAAC,8BAA8BE,WAAW,aAAaT,SAAS,EAAE,CAAC;EACvF,CAAC;EAEDY,iBAAiB,EAAE,MAAOC,OAA0B,IAAoB;IACpE,MAAMxB,GAAG,CAACc,IAAI,CAAC,mCAAmC,EAAEU,OAAO,CAAC;EAChE,CAAC;EAEDC,oBAAoB,EAAE,MAAAA,CAAOL,WAAmB,EAAEM,QAAgB,KAAoB;IAClF,MAAM1B,GAAG,CAACc,IAAI,CAAC,8BAA8BM,WAAW,YAAYM,QAAQ,EAAE,CAAC;EACnF,CAAC;EAEDC,yBAAyB,EAAE,MAAAA,CAAOP,WAAmB,EAAEM,QAAgB,KAAoB;IACvF,MAAM1B,GAAG,CAACkB,MAAM,CAAC,8BAA8BE,WAAW,YAAYM,QAAQ,EAAE,CAAC;EACrF;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}