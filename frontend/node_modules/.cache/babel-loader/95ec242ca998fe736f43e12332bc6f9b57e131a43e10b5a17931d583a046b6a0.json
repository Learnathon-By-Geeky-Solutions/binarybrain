{"ast":null,"code":"import api from './api';\nexport const taskService = {\n  // Task-related methods\n  getAllTasks: async () => {\n    const response = await api.get('/api/v1/private/task');\n    return response.data;\n  },\n  getTaskById: async id => {\n    const response = await api.get(`/api/v1/private/task/${id}`);\n    return response.data;\n  },\n  createTask: async taskData => {\n    const response = await api.post('/api/v1/private/task', taskData);\n    return response.data;\n  },\n  updateTask: async (id, taskData) => {\n    const response = await api.put(`/api/v1/private/task/${id}`, taskData);\n    return response.data;\n  },\n  deleteTask: async id => {\n    await api.delete(`/api/v1/private/task/${id}`);\n  },\n  getTasksByTeacher: async teacherId => {\n    const response = await api.get(`/api/v1/private/task/teacher/${teacherId}`);\n    return response.data;\n  },\n  getTasksByStatus: async status => {\n    const response = await api.get(`/api/v1/private/task?status=${status}`);\n    return response.data;\n  },\n  // Task Submission-related methods\n  getTaskSubmissions: async taskId => {\n    const response = await api.get(`/api/v1/private/task/${taskId}/submissions`);\n    return response.data;\n  },\n  getSubmissionById: async submissionId => {\n    const response = await api.get(`/api/v1/private/task/submission/${submissionId}`);\n    return response.data;\n  },\n  createSubmission: async submissionData => {\n    const response = await api.post('/api/v1/private/task/submission', submissionData);\n    return response.data;\n  },\n  gradeSubmission: async (submissionId, gradeData) => {\n    const response = await api.put(`/api/v1/private/task/submission/${submissionId}/grade`, gradeData);\n    return response.data;\n  },\n  getStudentSubmissions: async studentId => {\n    const response = await api.get(`/api/v1/private/task/submissions/student/${studentId}`);\n    return response.data;\n  },\n  // Course-specific task methods\n  getTasksByCourse: async courseId => {\n    const response = await api.get(`/api/v1/private/task/course/${courseId}`);\n    return response.data;\n  }\n};","map":{"version":3,"names":["api","taskService","getAllTasks","response","get","data","getTaskById","id","createTask","taskData","post","updateTask","put","deleteTask","delete","getTasksByTeacher","teacherId","getTasksByStatus","status","getTaskSubmissions","taskId","getSubmissionById","submissionId","createSubmission","submissionData","gradeSubmission","gradeData","getStudentSubmissions","studentId","getTasksByCourse","courseId"],"sources":["/workspaces/binarybrain/frontend/src/services/taskService.ts"],"sourcesContent":["import api from './api';\nimport {\n    Task,\n    CreateTaskDto,\n    UpdateTaskDto,\n    TaskSubmission,\n    CreateSubmissionDto,\n    GradeSubmissionDto,\n} from '../interfaces/task';\n\nexport const taskService = {\n    // Task-related methods\n    getAllTasks: async (): Promise<Task[]> => {\n        const response = await api.get<Task[]>('/api/v1/private/task');\n        return response.data;\n    },\n\n    getTaskById: async (id: number): Promise<Task> => {\n        const response = await api.get<Task>(`/api/v1/private/task/${id}`);\n        return response.data;\n    },\n\n    createTask: async (taskData: CreateTaskDto): Promise<Task> => {\n        const response = await api.post<Task>('/api/v1/private/task', taskData);\n        return response.data;\n    },\n\n    updateTask: async (id: number, taskData: UpdateTaskDto): Promise<Task> => {\n        const response = await api.put<Task>(`/api/v1/private/task/${id}`, taskData);\n        return response.data;\n    },\n\n    deleteTask: async (id: number): Promise<void> => {\n        await api.delete(`/api/v1/private/task/${id}`);\n    },\n\n    getTasksByTeacher: async (teacherId: number): Promise<Task[]> => {\n        const response = await api.get<Task[]>(`/api/v1/private/task/teacher/${teacherId}`);\n        return response.data;\n    },\n\n    getTasksByStatus: async (status: string): Promise<Task[]> => {\n        const response = await api.get<Task[]>(`/api/v1/private/task?status=${status}`);\n        return response.data;\n    },\n\n    // Task Submission-related methods\n    getTaskSubmissions: async (taskId: number): Promise<TaskSubmission[]> => {\n        const response = await api.get<TaskSubmission[]>(`/api/v1/private/task/${taskId}/submissions`);\n        return response.data;\n    },\n\n    getSubmissionById: async (submissionId: number): Promise<TaskSubmission> => {\n        const response = await api.get<TaskSubmission>(`/api/v1/private/task/submission/${submissionId}`);\n        return response.data;\n    },\n\n    createSubmission: async (submissionData: CreateSubmissionDto): Promise<TaskSubmission> => {\n        const response = await api.post<TaskSubmission>('/api/v1/private/task/submission', submissionData);\n        return response.data;\n    },\n\n    gradeSubmission: async (submissionId: number, gradeData: GradeSubmissionDto): Promise<TaskSubmission> => {\n        const response = await api.put<TaskSubmission>(\n            `/api/v1/private/task/submission/${submissionId}/grade`,\n            gradeData\n        );\n        return response.data;\n    },\n\n    getStudentSubmissions: async (studentId: number): Promise<TaskSubmission[]> => {\n        const response = await api.get<TaskSubmission[]>(`/api/v1/private/task/submissions/student/${studentId}`);\n        return response.data;\n    },\n\n    // Course-specific task methods\n    getTasksByCourse: async (courseId: number): Promise<Task[]> => {\n        const response = await api.get<Task[]>(`/api/v1/private/task/course/${courseId}`);\n        return response.data;\n    }\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAUvB,OAAO,MAAMC,WAAW,GAAG;EACvB;EACAC,WAAW,EAAE,MAAAA,CAAA,KAA6B;IACtC,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAS,sBAAsB,CAAC;IAC9D,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDC,WAAW,EAAE,MAAOC,EAAU,IAAoB;IAC9C,MAAMJ,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAO,wBAAwBG,EAAE,EAAE,CAAC;IAClE,OAAOJ,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDG,UAAU,EAAE,MAAOC,QAAuB,IAAoB;IAC1D,MAAMN,QAAQ,GAAG,MAAMH,GAAG,CAACU,IAAI,CAAO,sBAAsB,EAAED,QAAQ,CAAC;IACvE,OAAON,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDM,UAAU,EAAE,MAAAA,CAAOJ,EAAU,EAAEE,QAAuB,KAAoB;IACtE,MAAMN,QAAQ,GAAG,MAAMH,GAAG,CAACY,GAAG,CAAO,wBAAwBL,EAAE,EAAE,EAAEE,QAAQ,CAAC;IAC5E,OAAON,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDQ,UAAU,EAAE,MAAON,EAAU,IAAoB;IAC7C,MAAMP,GAAG,CAACc,MAAM,CAAC,wBAAwBP,EAAE,EAAE,CAAC;EAClD,CAAC;EAEDQ,iBAAiB,EAAE,MAAOC,SAAiB,IAAsB;IAC7D,MAAMb,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAS,gCAAgCY,SAAS,EAAE,CAAC;IACnF,OAAOb,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDY,gBAAgB,EAAE,MAAOC,MAAc,IAAsB;IACzD,MAAMf,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAS,+BAA+Bc,MAAM,EAAE,CAAC;IAC/E,OAAOf,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED;EACAc,kBAAkB,EAAE,MAAOC,MAAc,IAAgC;IACrE,MAAMjB,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAmB,wBAAwBgB,MAAM,cAAc,CAAC;IAC9F,OAAOjB,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDgB,iBAAiB,EAAE,MAAOC,YAAoB,IAA8B;IACxE,MAAMnB,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAiB,mCAAmCkB,YAAY,EAAE,CAAC;IACjG,OAAOnB,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDkB,gBAAgB,EAAE,MAAOC,cAAmC,IAA8B;IACtF,MAAMrB,QAAQ,GAAG,MAAMH,GAAG,CAACU,IAAI,CAAiB,iCAAiC,EAAEc,cAAc,CAAC;IAClG,OAAOrB,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDoB,eAAe,EAAE,MAAAA,CAAOH,YAAoB,EAAEI,SAA6B,KAA8B;IACrG,MAAMvB,QAAQ,GAAG,MAAMH,GAAG,CAACY,GAAG,CAC1B,mCAAmCU,YAAY,QAAQ,EACvDI,SACJ,CAAC;IACD,OAAOvB,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDsB,qBAAqB,EAAE,MAAOC,SAAiB,IAAgC;IAC3E,MAAMzB,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAmB,4CAA4CwB,SAAS,EAAE,CAAC;IACzG,OAAOzB,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED;EACAwB,gBAAgB,EAAE,MAAOC,QAAgB,IAAsB;IAC3D,MAAM3B,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAS,+BAA+B0B,QAAQ,EAAE,CAAC;IACjF,OAAO3B,QAAQ,CAACE,IAAI;EACxB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}