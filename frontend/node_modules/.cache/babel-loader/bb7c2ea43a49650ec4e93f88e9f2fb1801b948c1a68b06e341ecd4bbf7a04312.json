{"ast":null,"code":"import api from './api';\nexport const courseService = {\n  getAllCourses: async () => {\n    const response = await api.get('/api/v1/private/courses');\n    return response.data;\n  },\n  getCourseById: async id => {\n    const response = await api.get(`/api/v1/private/courses/${id}`);\n    return response.data;\n  },\n  getCoursesByTeacher: async teacherId => {\n    const response = await api.get(`/api/v1/private/courses/teacher/${teacherId}`);\n    return response.data;\n  },\n  getCoursesByStudent: async studentId => {\n    const response = await api.get(`/api/v1/private/courses/student/${studentId}`);\n    return response.data;\n  },\n  createCourse: async course => {\n    const response = await api.post('/api/v1/private/courses', course);\n    return response.data;\n  },\n  updateCourse: async (id, course) => {\n    const response = await api.put(`/api/v1/private/courses/${id}`, course);\n    return response.data;\n  },\n  deleteCourse: async id => {\n    await api.delete(`/api/v1/private/courses/${id}`);\n  },\n  getStudentsInCourse: async courseId => {\n    const response = await api.get(`/api/v1/private/courses/${courseId}/students`);\n    return response.data;\n  },\n  addStudentToCourse: async (courseId, studentId) => {\n    await api.post(`/api/v1/private/courses/${courseId}/students/${studentId}`);\n  },\n  removeStudentFromCourse: async (courseId, studentId) => {\n    await api.delete(`/api/v1/private/courses/${courseId}/students/${studentId}`);\n  }\n};","map":{"version":3,"names":["api","courseService","getAllCourses","response","get","data","getCourseById","id","getCoursesByTeacher","teacherId","getCoursesByStudent","studentId","createCourse","course","post","updateCourse","put","deleteCourse","delete","getStudentsInCourse","courseId","addStudentToCourse","removeStudentFromCourse"],"sources":["/workspaces/binarybrain/frontend/src/services/courseService.ts"],"sourcesContent":["import api from './api';\nimport { Course, CreateCourseDto, UpdateCourseDto, CourseStudent } from '../interfaces/course';\n\nexport const courseService = {\n    getAllCourses: async (): Promise<Course[]> => {\n        const response = await api.get<Course[]>('/api/v1/private/courses');\n        return response.data;\n    },\n\n    getCourseById: async (id: number): Promise<Course> => {\n        const response = await api.get<Course>(`/api/v1/private/courses/${id}`);\n        return response.data;\n    },\n\n    getCoursesByTeacher: async (teacherId: number): Promise<Course[]> => {\n        const response = await api.get<Course[]>(`/api/v1/private/courses/teacher/${teacherId}`);\n        return response.data;\n    },\n\n    getCoursesByStudent: async (studentId: number): Promise<Course[]> => {\n        const response = await api.get<Course[]>(`/api/v1/private/courses/student/${studentId}`);\n        return response.data;\n    },\n\n    createCourse: async (course: CreateCourseDto): Promise<Course> => {\n        const response = await api.post<Course>('/api/v1/private/courses', course);\n        return response.data;\n    },\n\n    updateCourse: async (id: number, course: UpdateCourseDto): Promise<Course> => {\n        const response = await api.put<Course>(`/api/v1/private/courses/${id}`, course);\n        return response.data;\n    },\n\n    deleteCourse: async (id: number): Promise<void> => {\n        await api.delete(`/api/v1/private/courses/${id}`);\n    },\n\n    getStudentsInCourse: async (courseId: number): Promise<CourseStudent[]> => {\n        const response = await api.get<CourseStudent[]>(`/api/v1/private/courses/${courseId}/students`);\n        return response.data;\n    },\n\n    addStudentToCourse: async (courseId: number, studentId: number): Promise<void> => {\n        await api.post(`/api/v1/private/courses/${courseId}/students/${studentId}`);\n    },\n\n    removeStudentFromCourse: async (courseId: number, studentId: number): Promise<void> => {\n        await api.delete(`/api/v1/private/courses/${courseId}/students/${studentId}`);\n    },\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAGvB,OAAO,MAAMC,aAAa,GAAG;EACzBC,aAAa,EAAE,MAAAA,CAAA,KAA+B;IAC1C,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAW,yBAAyB,CAAC;IACnE,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDC,aAAa,EAAE,MAAOC,EAAU,IAAsB;IAClD,MAAMJ,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAS,2BAA2BG,EAAE,EAAE,CAAC;IACvE,OAAOJ,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDG,mBAAmB,EAAE,MAAOC,SAAiB,IAAwB;IACjE,MAAMN,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAW,mCAAmCK,SAAS,EAAE,CAAC;IACxF,OAAON,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDK,mBAAmB,EAAE,MAAOC,SAAiB,IAAwB;IACjE,MAAMR,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAW,mCAAmCO,SAAS,EAAE,CAAC;IACxF,OAAOR,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDO,YAAY,EAAE,MAAOC,MAAuB,IAAsB;IAC9D,MAAMV,QAAQ,GAAG,MAAMH,GAAG,CAACc,IAAI,CAAS,yBAAyB,EAAED,MAAM,CAAC;IAC1E,OAAOV,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDU,YAAY,EAAE,MAAAA,CAAOR,EAAU,EAAEM,MAAuB,KAAsB;IAC1E,MAAMV,QAAQ,GAAG,MAAMH,GAAG,CAACgB,GAAG,CAAS,2BAA2BT,EAAE,EAAE,EAAEM,MAAM,CAAC;IAC/E,OAAOV,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDY,YAAY,EAAE,MAAOV,EAAU,IAAoB;IAC/C,MAAMP,GAAG,CAACkB,MAAM,CAAC,2BAA2BX,EAAE,EAAE,CAAC;EACrD,CAAC;EAEDY,mBAAmB,EAAE,MAAOC,QAAgB,IAA+B;IACvE,MAAMjB,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAkB,2BAA2BgB,QAAQ,WAAW,CAAC;IAC/F,OAAOjB,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDgB,kBAAkB,EAAE,MAAAA,CAAOD,QAAgB,EAAET,SAAiB,KAAoB;IAC9E,MAAMX,GAAG,CAACc,IAAI,CAAC,2BAA2BM,QAAQ,aAAaT,SAAS,EAAE,CAAC;EAC/E,CAAC;EAEDW,uBAAuB,EAAE,MAAAA,CAAOF,QAAgB,EAAET,SAAiB,KAAoB;IACnF,MAAMX,GAAG,CAACkB,MAAM,CAAC,2BAA2BE,QAAQ,aAAaT,SAAS,EAAE,CAAC;EACjF;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}