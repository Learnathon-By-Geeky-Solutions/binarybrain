{"ast":null,"code":"var _jsxFileName = \"/workspaces/binarybrain/frontend/src/pages/Courses.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Box, Button, Card, CardContent, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, Typography, Grid, Chip, IconButton, MenuItem } from '@mui/material';\nimport { Add as AddIcon, Edit as EditIcon, Delete as DeleteIcon, Assignment as AssignmentIcon } from '@mui/icons-material';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { courseService } from '../services/courseService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst courseValidationSchema = Yup.object({\n  title: Yup.string().required('Title is required'),\n  description: Yup.string().required('Description is required')\n});\nconst Courses = () => {\n  _s();\n  const user = useSelector(state => state.auth.user);\n  const [courses, setCourses] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [openCreateDialog, setOpenCreateDialog] = useState(false);\n  const [openEditDialog, setOpenEditDialog] = useState(false);\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n  const [selectedCourse, setSelectedCourse] = useState(null);\n  const [error, setError] = useState(null);\n  const fetchCourses = async () => {\n    try {\n      setLoading(true);\n      let fetchedCourses;\n      if (user !== null && user !== void 0 && user.roles.includes('ADMIN')) {\n        fetchedCourses = await courseService.getAllCourses();\n      } else {\n        fetchedCourses = await courseService.getCoursesByAuthor(user.id);\n      }\n      setCourses(fetchedCourses);\n    } catch (err) {\n      setError('Failed to fetch courses');\n      console.error('Error fetching courses:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchCourses();\n  }, [user]);\n  const handleCreateCourse = async values => {\n    try {\n      await courseService.createCourse(values);\n      setOpenCreateDialog(false);\n      fetchCourses();\n    } catch (err) {\n      setError('Failed to create course');\n      console.error('Error creating course:', err);\n    }\n  };\n  const handleUpdateCourse = async values => {\n    try {\n      await courseService.updateCourse(values);\n      setOpenEditDialog(false);\n      fetchCourses();\n    } catch (err) {\n      setError('Failed to update course');\n      console.error('Error updating course:', err);\n    }\n  };\n  const handleDeleteCourse = async () => {\n    if (!selectedCourse) return;\n    try {\n      await courseService.deleteCourse(selectedCourse.id);\n      setOpenDeleteDialog(false);\n      fetchCourses();\n    } catch (err) {\n      setError('Failed to delete course');\n      console.error('Error deleting course:', err);\n    }\n  };\n  const columns = [{\n    field: 'title',\n    headerName: 'Title',\n    flex: 1\n  }, {\n    field: 'description',\n    headerName: 'Description',\n    flex: 2\n  }, {\n    field: 'status',\n    headerName: 'Status',\n    width: 120,\n    renderCell: params => /*#__PURE__*/_jsxDEV(Chip, {\n      label: params.value,\n      color: params.value === 'OPEN' ? 'success' : 'default'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this)\n  }, {\n    field: 'actions',\n    headerName: 'Actions',\n    width: 200,\n    renderCell: params => /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        onClick: () => {\n          setSelectedCourse(params.row);\n          setOpenEditDialog(true);\n        },\n        children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"error\",\n        onClick: () => {\n          setSelectedCourse(params.row);\n          setOpenDeleteDialog(true);\n        },\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"secondary\",\n        onClick: () => {\n          // TODO: Implement task management\n        },\n        children: /*#__PURE__*/_jsxDEV(AssignmentIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      mb: 3,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Courses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 32\n        }, this),\n        onClick: () => setOpenCreateDialog(true),\n        children: \"Create Course\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: courses,\n          columns: columns,\n          loading: loading,\n          autoHeight: true,\n          pagination: true,\n          disableSelectionOnClick: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openCreateDialog,\n      onClose: () => setOpenCreateDialog(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Create New Course\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          title: '',\n          description: ''\n        },\n        validationSchema: courseValidationSchema,\n        onSubmit: handleCreateCourse,\n        children: ({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  name: \"title\",\n                  label: \"Title\",\n                  value: values.title,\n                  onChange: handleChange,\n                  onBlur: handleBlur,\n                  error: touched.title && !!errors.title,\n                  helperText: touched.title && errors.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  name: \"description\",\n                  label: \"Description\",\n                  multiline: true,\n                  rows: 4,\n                  value: values.description,\n                  onChange: handleChange,\n                  onBlur: handleBlur,\n                  error: touched.description && !!errors.description,\n                  helperText: touched.description && errors.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => setOpenCreateDialog(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              children: \"Create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openEditDialog,\n      onClose: () => setOpenEditDialog(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Edit Course\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this), selectedCourse && /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          id: selectedCourse.id,\n          title: selectedCourse.title,\n          description: selectedCourse.description,\n          status: selectedCourse.status\n        },\n        validationSchema: courseValidationSchema,\n        onSubmit: handleUpdateCourse,\n        children: ({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  name: \"title\",\n                  label: \"Title\",\n                  value: values.title,\n                  onChange: handleChange,\n                  onBlur: handleBlur,\n                  error: touched.title && !!errors.title,\n                  helperText: touched.title && errors.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  name: \"description\",\n                  label: \"Description\",\n                  multiline: true,\n                  rows: 4,\n                  value: values.description,\n                  onChange: handleChange,\n                  onBlur: handleBlur,\n                  error: touched.description && !!errors.description,\n                  helperText: touched.description && errors.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  select: true,\n                  fullWidth: true,\n                  name: \"status\",\n                  label: \"Status\",\n                  value: values.status,\n                  onChange: handleChange,\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"OPEN\",\n                    children: \"Open\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"CLOSED\",\n                    children: \"Closed\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => setOpenEditDialog(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDeleteDialog,\n      onClose: () => setOpenDeleteDialog(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Delete Course\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Are you sure you want to delete this course? This action cannot be undone.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpenDeleteDialog(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDeleteCourse,\n          color: \"error\",\n          variant: \"contained\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 9\n  }, this);\n};\n_s(Courses, \"qaFKqY2vOcObHM9Rxn8rOA6JoCY=\", false, function () {\n  return [useSelector];\n});\n_c = Courses;\nexport default Courses;\nvar _c;\n$RefreshReg$(_c, \"Courses\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","Box","Button","Card","CardContent","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TextField","Typography","Grid","Chip","IconButton","MenuItem","Add","AddIcon","Edit","EditIcon","Delete","DeleteIcon","Assignment","AssignmentIcon","DataGrid","Formik","Form","Yup","courseService","jsxDEV","_jsxDEV","courseValidationSchema","object","title","string","required","description","Courses","_s","user","state","auth","courses","setCourses","loading","setLoading","openCreateDialog","setOpenCreateDialog","openEditDialog","setOpenEditDialog","openDeleteDialog","setOpenDeleteDialog","selectedCourse","setSelectedCourse","error","setError","fetchCourses","fetchedCourses","roles","includes","getAllCourses","getCoursesByAuthor","id","err","console","handleCreateCourse","values","createCourse","handleUpdateCourse","updateCourse","handleDeleteCourse","deleteCourse","columns","field","headerName","flex","width","renderCell","params","label","value","color","fileName","_jsxFileName","lineNumber","columnNumber","children","onClick","row","sx","p","display","justifyContent","alignItems","mb","variant","startIcon","rows","autoHeight","pagination","disableSelectionOnClick","open","onClose","initialValues","validationSchema","onSubmit","errors","touched","handleChange","handleBlur","container","spacing","item","xs","fullWidth","name","onChange","onBlur","helperText","multiline","type","status","select","_c","$RefreshReg$"],"sources":["/workspaces/binarybrain/frontend/src/pages/Courses.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n    Box,\n    Button,\n    Card,\n    CardContent,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    TextField,\n    Typography,\n    Grid,\n    Chip,\n    IconButton,\n    MenuItem,\n} from '@mui/material';\nimport {\n    Add as AddIcon,\n    Edit as EditIcon,\n    Delete as DeleteIcon,\n    Assignment as AssignmentIcon,\n} from '@mui/icons-material';\nimport { DataGrid, GridColDef } from '@mui/x-data-grid';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { courseService } from '../services/courseService';\nimport { Course, CreateCourseDto, UpdateCourseDto } from '../interfaces/course';\nimport { RootState } from '../store';\n\nconst courseValidationSchema = Yup.object({\n    title: Yup.string().required('Title is required'),\n    description: Yup.string().required('Description is required'),\n});\n\nconst Courses: React.FC = () => {\n    const user = useSelector((state: RootState) => state.auth.user);\n    const [courses, setCourses] = useState<Course[]>([]);\n    const [loading, setLoading] = useState(true);\n    const [openCreateDialog, setOpenCreateDialog] = useState(false);\n    const [openEditDialog, setOpenEditDialog] = useState(false);\n    const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n    const [selectedCourse, setSelectedCourse] = useState<Course | null>(null);\n    const [error, setError] = useState<string | null>(null);\n\n    const fetchCourses = async () => {\n        try {\n            setLoading(true);\n            let fetchedCourses: Course[];\n            if (user?.roles.includes('ADMIN')) {\n                fetchedCourses = await courseService.getAllCourses();\n            } else {\n                fetchedCourses = await courseService.getCoursesByAuthor(user!.id);\n            }\n            setCourses(fetchedCourses);\n        } catch (err) {\n            setError('Failed to fetch courses');\n            console.error('Error fetching courses:', err);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchCourses();\n    }, [user]);\n\n    const handleCreateCourse = async (values: CreateCourseDto) => {\n        try {\n            await courseService.createCourse(values);\n            setOpenCreateDialog(false);\n            fetchCourses();\n        } catch (err) {\n            setError('Failed to create course');\n            console.error('Error creating course:', err);\n        }\n    };\n\n    const handleUpdateCourse = async (values: UpdateCourseDto) => {\n        try {\n            await courseService.updateCourse(values);\n            setOpenEditDialog(false);\n            fetchCourses();\n        } catch (err) {\n            setError('Failed to update course');\n            console.error('Error updating course:', err);\n        }\n    };\n\n    const handleDeleteCourse = async () => {\n        if (!selectedCourse) return;\n        try {\n            await courseService.deleteCourse(selectedCourse.id);\n            setOpenDeleteDialog(false);\n            fetchCourses();\n        } catch (err) {\n            setError('Failed to delete course');\n            console.error('Error deleting course:', err);\n        }\n    };\n\n    const columns: GridColDef[] = [\n        { field: 'title', headerName: 'Title', flex: 1 },\n        { field: 'description', headerName: 'Description', flex: 2 },\n        {\n            field: 'status',\n            headerName: 'Status',\n            width: 120,\n            renderCell: (params) => (\n                <Chip\n                    label={params.value}\n                    color={params.value === 'OPEN' ? 'success' : 'default'}\n                />\n            ),\n        },\n        {\n            field: 'actions',\n            headerName: 'Actions',\n            width: 200,\n            renderCell: (params) => (\n                <Box>\n                    <IconButton\n                        color=\"primary\"\n                        onClick={() => {\n                            setSelectedCourse(params.row);\n                            setOpenEditDialog(true);\n                        }}\n                    >\n                        <EditIcon />\n                    </IconButton>\n                    <IconButton\n                        color=\"error\"\n                        onClick={() => {\n                            setSelectedCourse(params.row);\n                            setOpenDeleteDialog(true);\n                        }}\n                    >\n                        <DeleteIcon />\n                    </IconButton>\n                    <IconButton\n                        color=\"secondary\"\n                        onClick={() => {\n                            // TODO: Implement task management\n                        }}\n                    >\n                        <AssignmentIcon />\n                    </IconButton>\n                </Box>\n            ),\n        },\n    ];\n\n    return (\n        <Box sx={{ p: 3 }}>\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n                <Typography variant=\"h4\">Courses</Typography>\n                <Button\n                    variant=\"contained\"\n                    startIcon={<AddIcon />}\n                    onClick={() => setOpenCreateDialog(true)}\n                >\n                    Create Course\n                </Button>\n            </Box>\n\n            <Card>\n                <CardContent>\n                    <DataGrid\n                        rows={courses}\n                        columns={columns}\n                        loading={loading}\n                        autoHeight\n                        pagination\n                        disableSelectionOnClick\n                    />\n                </CardContent>\n            </Card>\n\n            {/* Create Course Dialog */}\n            <Dialog open={openCreateDialog} onClose={() => setOpenCreateDialog(false)}>\n                <DialogTitle>Create New Course</DialogTitle>\n                <Formik\n                    initialValues={{ title: '', description: '' }}\n                    validationSchema={courseValidationSchema}\n                    onSubmit={handleCreateCourse}\n                >\n                    {({ values, errors, touched, handleChange, handleBlur }) => (\n                        <Form>\n                            <DialogContent>\n                                <Grid container spacing={2}>\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            fullWidth\n                                            name=\"title\"\n                                            label=\"Title\"\n                                            value={values.title}\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            error={touched.title && !!errors.title}\n                                            helperText={touched.title && errors.title}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            fullWidth\n                                            name=\"description\"\n                                            label=\"Description\"\n                                            multiline\n                                            rows={4}\n                                            value={values.description}\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            error={touched.description && !!errors.description}\n                                            helperText={touched.description && errors.description}\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={() => setOpenCreateDialog(false)}>Cancel</Button>\n                                <Button type=\"submit\" variant=\"contained\">Create</Button>\n                            </DialogActions>\n                        </Form>\n                    )}\n                </Formik>\n            </Dialog>\n\n            {/* Edit Course Dialog */}\n            <Dialog open={openEditDialog} onClose={() => setOpenEditDialog(false)}>\n                <DialogTitle>Edit Course</DialogTitle>\n                {selectedCourse && (\n                    <Formik\n                        initialValues={{\n                            id: selectedCourse.id,\n                            title: selectedCourse.title,\n                            description: selectedCourse.description,\n                            status: selectedCourse.status,\n                        }}\n                        validationSchema={courseValidationSchema}\n                        onSubmit={handleUpdateCourse}\n                    >\n                        {({ values, errors, touched, handleChange, handleBlur }) => (\n                            <Form>\n                                <DialogContent>\n                                    <Grid container spacing={2}>\n                                        <Grid item xs={12}>\n                                            <TextField\n                                                fullWidth\n                                                name=\"title\"\n                                                label=\"Title\"\n                                                value={values.title}\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                error={touched.title && !!errors.title}\n                                                helperText={touched.title && errors.title}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={12}>\n                                            <TextField\n                                                fullWidth\n                                                name=\"description\"\n                                                label=\"Description\"\n                                                multiline\n                                                rows={4}\n                                                value={values.description}\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                error={touched.description && !!errors.description}\n                                                helperText={touched.description && errors.description}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={12}>\n                                            <TextField\n                                                select\n                                                fullWidth\n                                                name=\"status\"\n                                                label=\"Status\"\n                                                value={values.status}\n                                                onChange={handleChange}\n                                            >\n                                                <MenuItem value=\"OPEN\">Open</MenuItem>\n                                                <MenuItem value=\"CLOSED\">Closed</MenuItem>\n                                            </TextField>\n                                        </Grid>\n                                    </Grid>\n                                </DialogContent>\n                                <DialogActions>\n                                    <Button onClick={() => setOpenEditDialog(false)}>Cancel</Button>\n                                    <Button type=\"submit\" variant=\"contained\">Update</Button>\n                                </DialogActions>\n                            </Form>\n                        )}\n                    </Formik>\n                )}\n            </Dialog>\n\n            {/* Delete Confirmation Dialog */}\n            <Dialog open={openDeleteDialog} onClose={() => setOpenDeleteDialog(false)}>\n                <DialogTitle>Delete Course</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Are you sure you want to delete this course? This action cannot be undone.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setOpenDeleteDialog(false)}>Cancel</Button>\n                    <Button onClick={handleDeleteCourse} color=\"error\" variant=\"contained\">\n                        Delete\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </Box>\n    );\n};\n\nexport default Courses;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}